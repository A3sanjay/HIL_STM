/* Automatically generated nanopb header */
/* Generated by nanopb-1.0.0-dev */

#ifndef PB_PROTO_SET_BOARD_RESPONSE_PB_H_INCLUDED
#define PB_PROTO_SET_BOARD_RESPONSE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _InitializeBoard {
    uint32_t board_to_run;
} InitializeBoard;

typedef struct _Response {
    uint32_t message_received;
} Response;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define InitializeBoard_init_default             {0}
#define Response_init_default                    {0}
#define InitializeBoard_init_zero                {0}
#define Response_init_zero                       {0}

/* Field tags (for use in manual encoding/decoding) */
#define InitializeBoard_board_to_run_tag         1
#define Response_message_received_tag            1

/* Struct field encoding specification for nanopb */
#define InitializeBoard_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   board_to_run,      1)
#define InitializeBoard_CALLBACK NULL
#define InitializeBoard_DEFAULT NULL

#define Response_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   message_received,   1)
#define Response_CALLBACK NULL
#define Response_DEFAULT NULL

extern const pb_msgdesc_t InitializeBoard_msg;
extern const pb_msgdesc_t Response_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define InitializeBoard_fields &InitializeBoard_msg
#define Response_fields &Response_msg

/* Maximum encoded size of messages (where known) */
#define InitializeBoard_size                     6
#define PROTO_SET_BOARD_RESPONSE_PB_H_MAX_SIZE   InitializeBoard_size
#define Response_size                            6

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
